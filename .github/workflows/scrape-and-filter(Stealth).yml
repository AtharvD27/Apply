name: Scrape & Filter Stealth

on:  
  schedule:
    - cron: '30 10 * * *'  # 6:30 AM EST
    - cron: '30 12 * * *'  # 8:30 AM EST
    - cron: '30 14 * * *'  # 10:30 AM EST
    - cron: '30 16 * * *'  # 12:30 PM EST
    - cron: '30 18 * * *'  # 2:30 PM EST
    - cron: '30 20 * * *'  # 4:30 PM EST
    - cron: '30 22 * * *'  # 6:30 PM EST
    - cron: '30 0 * * *'   # 8:30 PM EST
  workflow_dispatch:
    
permissions:
  contents: write
  actions: write

concurrency:
  group: cancel-stealth          # <-- Scrape duplicates
  cancel-in-progress: true           #      are cancelled

jobs:
  scrape_and_filter:
    runs-on: [self-hosted, dice-runner]

    concurrency:
      group: lock-stealth           # <-- same string as Apply job
      cancel-in-progress: false      #     so Scrape simply queues

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3
      with:
        persist-credentials: false
        fetch-depth: 0

    - name: Activate Python venv
      run: |
        source /home/ghactions/auto-applier/bin/activate
        echo "ðŸ‘‰ Using Python at $(which python) ($(python --version))"
    
    - name: Run main.py to scrape and filter
      env:
        BASE_URL: ${{ secrets.BASE_URL }}
      run: python src/main.py

    - name: Commit and push updated job files
      run: |
        git config --global user.name "github-actions"
        git config --global user.email "github-actions@github.com"
        git add output/jobs.csv output/final_ml_jobs.csv output/logs/*.log

        if git diff --cached --quiet; then
          echo "âœ… No changes to commit."
        else
          git commit -m "ðŸ”„ Auto-update jobs.csv and final_ml_jobs.csv"
          git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git HEAD:${{ github.ref }}
        fi

    - name: Trigger Stealth Apply workflow
      uses: benc-uk/workflow-dispatch@v1
      with:
        workflow: apply-and-commit(Stealth).yml
        token:    ${{ secrets.GITHUB_TOKEN }}
